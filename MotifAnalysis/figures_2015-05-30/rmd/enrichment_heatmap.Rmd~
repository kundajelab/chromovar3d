
TF_enrich_template='/srv/gsfs0/projects/snyder/oursu/histoneQTL/motif_analysis/results/2015-01-13/OverlapEnrichment/TF_overlap_QTLpeaks/TF_overlap_QTLpeaks'
hqtlinTF_enrich_template='/srv/gsfs0/projects/snyder/oursu/histoneQTL/motif_analysis/results/2015-01-13/OverlapEnrichment/TF_overlap_hQTLs/TF_overlap_hQTLs'
motif_enrich_template
disruptedMotif_enrich_template

#build heatmap data - one for local one for distal

in_template='/srv/gsfs0/projects/snyder/oursu/histoneQTL/motif_analysis/results/2015-01-13/OverlapEnrichment/TF_overlap_QTLpeaks/TF_overlap_QTLpeaksHMARK.LocalQTL.TFBSoverlapEnrichment'
build_heatmap_data=function(in_template,hmarks){
	first=TRUE
	for (hmark in c('H3K4ME1','H3K4ME3','H3K27AC')){
	    current=read.table(gsub('HMARK',hmark,in_template),header=TRUE)
	    rownames(current)=as.character(current$tf)
	    if (first==FALSE){
	       total=cbind(total,current)
	    }
	    if (first==TRUE){
	       total=data.frame(tf=as.character(current$tf),a=current$enrichment)
	       colnames(total)[2]=hmark
	       first=FALSE
	    }
	}
}

out='/srv/gsfs0/projects/snyder/oursu/histoneQTL/motif_analysis/results/2015-01-13/OverlapEnrichment/OverlapEnrichment'
hmarks=c('H3K4ME1','H3K4ME3','H3K27AC')
enrichments=c('TF_overlap_QTLpeaks','TF_overlap_hQTLs')
in_template='/srv/gsfs0/projects/snyder/oursu/histoneQTL/motif_analysis/results/2015-01-13/OverlapEnrichment/ENRICH/ENRICHHMARK.LocalQTL.TFBSoverlapEnrichment'
build_heatmap_data=function(in_template,enrichments,hmarks){
        first=TRUE
	keep=c()
	for (hmark in hmarks){
        for (enri in enrichments){
            current=read.table(gsub('HMARK',hmark,gsub('ENRICH',enri,in_template)),header=TRUE)
	    keep=unique(c(keep,current[which(as.numeric(as.character(current$BH))<=0.05),'tf']))
            rownames(current)=as.character(current$tf)
            if (first==FALSE){
               total=cbind(total,current[rownames(total),'enrichment'])
	       colnames(total)[ncol(total)]=paste(hmark,enri)
            }
            if (first==TRUE){
               total=data.frame(tf=as.character(current$tf),a=current$enrichment)
	       rownames(total)=as.character(total$tf)
               colnames(total)[2]=paste(hmark,enri)
               first=FALSE
            }
	}
        }
	total=total[,-which(colnames(total)=='tf')]
	total=total[keep,]
	rowsums_total=rowSums(total)
total=total[-which(is.infinite(rowsums_total)),]
require(pheatmap)
require(cba)
d <- dist(as.matrix(total))
hc <- hclust(d)
co <- order.optimal(d, hc$merge)
total.optimalRows=as.matrix(total)[co$order,]
return(total.optimalRows)
}
rowsums_total=rowSums(total)
total=total[-which(is.infinite(rowsums_total)),]
require(pheatmap)
require(cba)
d <- dist(as.matrix(total))
hc <- hclust(d)
co <- order.optimal(d, hc$merge)
total.optimalRows=as.matrix(total)[co$order,]

pdf(paste(out,'.pdf',sep=''))
pheatmap(as.matrix(total.optimalRows),cluster_cols=FALSE,fontsize=5,breaks=seq(from=0,to=2,by=0.1),
	color=colorRampPalette(c("blue", "white", "red"))(n = 21),cellwidth=5,cellheight=5)
dev.off()