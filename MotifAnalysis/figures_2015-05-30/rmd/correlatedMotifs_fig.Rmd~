
Motif analysis
==============

Here is the cross-TF analysis, where we perform the multiple testing correction.

INFILE_LOCAL='/srv/gsfs0/projects/snyder/oursu/histoneQTL/motif_analysis/results/2015-01-13/Local/LocalAnalysis.HMARK.gz.annotated.gz'
INFILE_DISTAL='/srv/gsfs0/projects/snyder/oursu/histoneQTL/motif_analysis/results/2015-01-13/Local/DistalAnalysis.HMARK.gz'
```{r,eval=F,dev='pdf'}
process_hmark_motifData=function(hmark,INFILE,filterForQTLpeaks=TRUE){
	in.f=gsub('HMARK',hmark,INFILE)
	TFdata.qtl=read.table(in.f,header=T)
	if (filterForQTLpeaks==TRUE){
	   maxqtl_rows=which(as.character(TFdata.qtl$pass.pvalTH)=='pass')
	   qtl_peaks=unique(as.character(TFdata.qtl[maxqtl_rows,'peak']))
	   if (length(qtl_peaks)>0){
	      TFdata.qtl=TFdata.qtl[which(as.character(TFdata.qtl$peak) %in% qtl_peaks),]
	   }
	}
        # - correct MHT across full dataset. Add another column
        TFdata.qtl.mht=data.frame(TFdata.qtl,
			crossTF_pBH.spearman=p.adjust(as.numeric(as.character(TFdata.qtl$genomeWide_match.p.sp)),method="BH"),hmark=hmark)
	return(TFdata.qtl.mht)
}

motif_datasets_local=list()
motif_datasets_distal=list()

hmarks=c('H3K4ME1','H3K4ME3','H3K27AC','dhs','RNA')
first=T
for (hmark in hmarks){
    print(hmark)
    motif_datasets_local[[hmark]]=process_hmark_motifData(hmark,INFILE_LOCAL,TRUE)
    motif_datasets_distal[[hmark]]=process_hmark_motifData(hmark,INFILE_DISTAL,FALSE)
    if (first!=TRUE){
       total_local=rbind(total_local,motif_datasets_local[[hmark]])
       total_distal=rbind(total_distal,motif_datasets_distal[[hmark]])
    }   
    if (first==TRUE){
       total_local=motif_datasets_local[[hmark]]
       total_distal=motif_datasets_distal[[hmark]]
       first=FALSE
    }
}
write.table(total_local,file=paste(gsub('HMARK','',INFILE_LOCAL),'.CompiledDataAcrossTFs',sep=''),quote=F,row.names=F,col.names=T,sep='\t')
save(motif_datasets_local,file=paste(gsub('HMARK','',INFILE_LOCAL),'.CompiledDataAcrossTFs.rda',sep=''))
write.table(total_local,file=paste(gsub('HMARK','',INFILE_DISTAL),'.CompiledDataAcrossTFs',sep=''),quote=F,row.names=F,col.names=T,sep='\t')
save(motif_datasets_local,file=paste(gsub('HMARK','',INFILE_DISTAL),'.CompiledDataAcrossTFs.rda',sep=''))

```

Now, restrict to peaks with QTLs. Barplot of number of peaks explained, grouped by the number of SNPs disrupted per peak.

```{r MotifsLocationsPerPeak,dev='pdf'}
#Get data for barplot

barplot_dataset=function(motif_datasets,hmarks,out,maxy){
numIntervals=4
barplot_data=data.frame(array(0,dim=c(length(hmarks),numIntervals)))
rownames(barplot_data)=hmarks
colnames(barplot_data)=c('1','2','3','>=4')
for (i in c(1:length(hmarks))){
  hmark=hmarks[i]

  #Numbers of interest
  data=motif_datasets[[hmark]]
  #Keep only qtls with sig motif disruptions
  sig_thresh=0.05
  qtl.data=data[which(as.numeric(as.character(data$crossTF_pBH.spearman))<=sig_thresh),]
  #Keep only unique peak-scoredRegion combinations
  qtl.peakScoredRegion.uniq=qtl.data
  data.dupli=which(duplicated(paste(qtl.peakScoredRegion.uniq$peak,qtl.peakScoredRegion.uniq$snp)))
  if (length(data.dupli)>0){
     qtl.peakScoredRegion.uniq=qtl.peakScoredRegion.uniq[-data.dupli,]
  }
  #Count the number of scoredRegions per peak for the marks
  counts_per_peak=table(qtl.peakScoredRegion.uniq[,'peak'])
  scoredRegions.perPeak=c()
  for (i in c(1:numIntervals)){
      scoredRegions.perPeak=c(scoredRegions.perPeak,length(which(counts_per_peak==i)))
  }
  scoredRegions.perPeak[numIntervals]=scoredRegions.perPeak[numIntervals]+length(which(counts_per_peak>numIntervals))
  #scoredRegions.perPeak=table(cut(table(qtl.peakScoredRegion.uniq[,'peak']),c(0:(numIntervals-1),max(table(qtl.peakScoredRegion.uniq[,'peak'])))))
  barplot_data[hmark,]=scoredRegions.perPeak
}
pdf(out)
par(mar=c(5, 4, 2, 0) + 2,mgp=c(4, 1, 0))
barplot_colors=gray.colors(numIntervals, start = 0, end = 1, gamma = 2.2)
barplot(t(barplot_data),space=0.3,cex.axis=2,cex.names=1,ylim=c(0,maxy),ylab='Number of peaks',xlab='Histone mark',
main='Number of peaks explained through motif analysis \nBy number of motif-disrupting SNPs per peak\n Considering only QTL peaks',cex.lab=2,col=barplot_colors) 
legend('topright',fill=barplot_colors,legend=c('1 SNP/peak',paste(colnames(barplot_data)[2:dim(barplot_data)[2]],' SNPs/peak',sep='')),cex=1.2)
dev.off()
}
barplot_dataset(motif_datasets_local,c('H3K4ME1','H3K4ME3','H3K27AC','dhs','RNA'),paste(INFILE_LOCAL,'disruptionCounts.pdf',sep=''),3000)
barplot_dataset(motif_datasets_distal,c('H3K4ME1','H3K4ME3','H3K27AC','dhs','RNA'),paste(INFILE_DISTAL,'disruptionCounts.pdf',sep=''),1500)

```
